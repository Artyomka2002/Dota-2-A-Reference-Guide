e PolarRadiusAxisDomain = number | "auto" | "dataMin" | "dataMax";

export interface PolarRadiusAxisProps extends EventAttributes, Partial<PresentationAttributes> {
    type?: "number" | "category";
    cx?: number;
    cy?: number;
    hide?: boolean;
    radiusAxisId?: string | number;
    angle?: number;
    tickCount?: number;
    ticks?: readonly PolarRadiusAxisTick[];
    orientation?: "left" | "right" | "middle";
    axisLine?: boolean | object;
    tick?: boolean | object | React.ReactElement | ContentRenderer<any>;
    stroke?: string;
    tickFormatter?: TickFormatterFunction;
    domain?: Readonly<[PolarRadiusAxisDomain, PolarRadiusAxisDomain]>;
    scale?: ScaleType | RechartsFunction;
    allowDataOverflow?: boolean;
    allowDuplicatedCategory?: boolean;
}

export class PolarRadiusAxis extends React.Component<PolarRadiusAxisProps> {}

export interface PolygonPoint {
    x: number;
    y: number;
}

export interface PolygonProps extends EventAttributes, Partial<PresentationAttributes> {
    className?: string;
    points?: readonly PolygonPoint[];
}

export class Polygon extends React.Component<PolygonProps> {}

export interface RadarPoint {
    x: number;
    y: number;
    cx: number;
    cy: number;
    angle: number;
    radius: number;
    value: number;
    payload: object;
}