import type { EntityAdapter, EntityState } from '../models'
import { createEntityAdapter } from '../create_adapter'
import type { BookModel } from './fixtures/book'
import {
  TheGreatGatsby,
  AClockworkOrange,
  AnimalFarm,
  TheHobbit,
} from './fixtures/book'
import { createNextState } from '../..'

describe('Unsorted State Adapter', () => {
  let adapter: EntityAdapter<BookModel, string>
  let state: EntityState<BookModel, string>

  beforeAll(() => {
    //eslint-disable-next-line
    Object.defineProperty(Array.prototype, 'unwantedField', {
      enumerable: true,
      configurable: true,
      value: 'This should not appear anywhere',
    })
  })

  afterAll(() => {
    delete (Array.prototype as any).unwantedField
  })

  beforeEach(() => {
    adapter = createEntityAdapter({
      selectId: (book: BookModel) => book.id,
    })

    state = { ids: [], entities: {} }
  })

  it('should let you add one entity to the state', () => {
    const withOneEntity = adapter.addOne(state, TheGreatGatsby)

    expect(withOneEntity).toEqual({
      ids: [TheGreatGatsby.id],
      entities: {
        [TheGreatGatsby.id]: TheGreatGatsby,
      },
    })
  })

  it('should not change state if you attempt to re-add an entity', () => {
    const withOneEntity = adapter.addOne(state, TheGreatGatsby)

    const readded = adapter.addOne(withOneEntity, TheGreatGatsby)

    expect(readded).toBe(withOneEntity)
  })

  it('should let you add many entities to the state', () => {
    const withOneEntity = adapter.addOne(state, TheGreatGatsby)

    const withManyMore = adapter.addMany(withOneEntity, [
      AClockworkOrange,
      AnimalFarm,
    ])

    expect(withManyMore).toEqual({
      ids: [TheGreatGatsby.id, AClockworkOrange.id, AnimalFarm.id],
      entities: {
        [TheGreatGatsby.id]: TheGreatGatsby,
        [AClockworkOrange.id]: AClockworkOrange,
        [AnimalFarm.id]: AnimalFarm,
      },
    })
  })

  it('should let you add many entities to the state from a dictionary', () => {
    const withOneEntity = adapter.addOne(state, TheGreatGatsby)

    const withManyMore = adapter.addMany(withOneEntity, {
      [AClockworkOrange.id]: AClockworkOrange,
      [AnimalFarm.id]: AnimalFarm,
    })

    expect(withManyMore).toEqual({
      ids: [TheGreatGatsby.id, AClockworkOrange.id, AnimalFarm.id],
      entities: {
        [TheGreatGatsby.id]: TheGreatGatsby,
        [AClockworkOrange.id]: AClockworkOrange,
        [AnimalFarm.id]: AnimalFarm,
      },
    })
  })

  it('should remove existing and add new ones on setAll', () => {
    const withOneEntity = adapter.addOne(state, TheGreatGatsby)

    const withAll = adapter.setAll(withOneEntity, [
      AClockworkOrange,
      AnimalFarm,
    ])

    expect(withAll).toEqual({
      ids: [AClockworkOrange.id, AnimalFarm.id],
      entities: {
        [AClockworkOrange.id]: AClockworkOrange,
        [AnimalFarm.id]: AnimalFarm,
      },
    })
  })

  it('should remove existing and add new ones on setAll when passing in a dictionary', () => {
    const withOneEntity = adapter.addOne(state, TheGreatGatsby)

    const withAll = adapter.setAll(withOneEntity, {
      [AClockworkOrange.id]: AClockworkOrange,
      [AnimalFarm.id]: AnimalFarm,
    })

    expect(withAll).toEqual({
      ids: [AClockworkOrange.id, AnimalFarm.id],
      entities: {
        [AClockworkOrange.id]: AClockworkOrange,
        [AnimalFarm.id]: AnimalFarm,
      },
    })
  })

  it('should let you add remove an entity from the state', () => {
    const withOneEntity = adapter.addOne(state, TheGreatGatsby)

    const withoutOne = adapter.removeOne(withOneEntity, TheGreatGatsby.id)

    expect(withoutOne).toEqual({
      ids: [],
      entities: {},
    })
  })

  it('should let you remove many entities by id from the state', () => {
    const withAll = adapter.setAll(state, [
      TheGreatGatsby,
      AClockworkOrange,
      AnimalFarm,
    ])

    const withoutMany = adapter.removeMany(withAll, [
      TheGreatGatsby.id,
      AClockworkOrange.id,
    ])

    expect(withoutMany).toEqual({
      ids: [AnimalFarm.id],
      entities: {
        [AnimalFarm.id]: AnimalFarm,
      },
    })
  })

  it('should let you remove all entities from the state', () => {
    const withAll = adapter.setAll(state, [
      TheGreatGatsby,
      AClockworkOrange,
      AnimalFarm,
    ])

    const withoutAll = adapter.removeAll(withAll)

    expect(withoutAll).toEqual({
      ids: [],
      entities: {},
    })
  })

  it('should let you update an entity in the state', () => {
    const withOne = adapter.addOne(state, TheGreatGatsby)
    const changes = { title: 'A New Hope' }

    const withUpdates = adapter.updateOne(withOne, {
      id: TheGreatGatsby.id,
      changes,
    })

    expect(withUpdates).toEqual({
      ids: [TheGreatGatsby.id],
      entities: {
        [TheGreatGatsby.id]: {
          ...TheGreatGatsby,
          ...changes,
        },
      },
    })
  })

  it('should not change state if you attempt to update an entity that has not been added', () => {
    const withUpdates = adapter.updateOne(state, {
      id: TheGreatGatsby.id,
      changes: { title: 'A New Title' },
    })

    expect(withUpdates).toBe(state)
  })

  it('should not change ids state if you attempt to update an entity that has already been added', () => {
    const withOne = adapter.addOne(state, TheGreatGatsby)
    const changes = { title: 'A New Hope' }

    const withUpdates = adapter.updateOne(withOne, {
      id: TheGreatGatsby.id,
      changes,
    })

    expect(withOne.ids).toBe(withUpdates.ids)
  })

  it('should let you update the id of entity', () => {
    const withOne = adapter.addOne(state, TheGreatGatsby)
    const changes = { id: 'A New Id' }

    const withUpdates = adapter.updateOne(withOne, {
      id: TheGreatGatsby.id,
      changes,
    })

    expect(withUpdates).toEqual({
      ids: [changes.id],
      entities: {
        [changes.id]: {
          ...TheGreatGatsby,
          ...changes,
        },
      },
    })
  })

  it('should let you update many entities by id in the state', () => {
    const firstChange = { title: 'First Change' }
    const secondChange = { title: 'Second Change' }
    const withMany = adapter.setAll(state, [TheGreatGatsby, AClockworkOrange])

    const withUpdates = adapter.updateMany(withMany, [
      { id: TheGreatGatsby.id, changes: firstChange },
      { id: AClockworkOrange.id, changes: secondChange },
    ])

    expect(withUpdates).toEqual({
      ids: [TheGreatGatsby.id, AClockworkOrange.id],
      entities: {
        [TheGreatGatsby.id]: {
          ...TheGreatGatsby,
          ...firstChange,
        },
        [AClockworkOrange.id]: {
          ...AClockworkOrange,
          ...secondChange,
        },
      },
    })
  })

  it("doesn't break when multiple renames of one item occur", () => {
    const withA = adapter.addOne(state, { id: 'a', title: 'First' })

    const withUpdates = adapter.updateMany(withA, [
      { id: 'a', changes: { id: 'b' } },
      { id: 'a', changes: { id: 'c' } },
    ])

    const { ids, entities } = withUpdates

    /*
      Original code failed with a mish-mash of values, like:
      {
        ids: [ 'c' ],
        entities: { b: { id: 'b', title: 'First' }, c: { id: 'c' } }
      }
      We now expect that only 'c' will be left:
      { 
        ids: [ 'c' ], 
        entities: { c: { id: 'c', title: 'First' } } 
      }
    */
    expect(ids.length).toBe(1)
    expect(ids).toEqual(['c'])
    expect(entities.a).toBeFalsy()
    expect(entities.b).toBeFalsy()
    expect(entities.c).toBeTruthy()
  })

  it('should let you add one entity to the state with upsert()', () => {
    const withOneEntity = adapter.upsertOne(state, TheGreatGatsby)
    expect(withOneEntity).toEqual({
      ids: [TheGreatGatsby.id],
      entities: {
        [TheGreatGatsby.id]: TheGreatGatsby,
      },
  {"scope":{"breadcrumbs":[{"timestamp":1724800329.237,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800330.251,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800331.264,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800332.278,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800333.29,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800334.294,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800335.305,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800338.344,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800339.355,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800341.372,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800342.372,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800343.385,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800344.399,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800347.418,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800348.426,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800349.438,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800351.466,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800352.48,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800353.493,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800356.533,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800357.544,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800358.552,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800359.554,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800361.582,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800364.612,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800365.625,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800367.649,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800369.673,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800370.688,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800371.702,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800372.714,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800374.737,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800375.738,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800376.739,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800378.743,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800379.757,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800380.769,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800381.785,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800382.798,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800384.823,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800386.844,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800387.847,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800388.849,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800389.865,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800391.886,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800392.899,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800393.913,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800394.914,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800396.933,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800401.977,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800403.993,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800405.006,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800407.029,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800409.055,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800411.077,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800414.106,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800415.12,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800422.205,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800428.259,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800443.407,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800445.417,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800446.419,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800456.528,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800460.582,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800462.588,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800467.649,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800468.662,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800469.676,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800470.688,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800472.71,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800473.712,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800474.724,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800499.984,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800500.995,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800503.023,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800504.036,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800505.039,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800506.053,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800507.064,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800510.102,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800512.128,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800515.163,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800516.177,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800519.206,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800520.218,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800521.218,"category":"electron","message":"powerMonitor.speed-limit-change","type":"ui"},{"timestamp":1724800523.246,"category":"electron","message":"powerMonitor.speed-lim